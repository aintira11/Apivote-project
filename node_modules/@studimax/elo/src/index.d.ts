declare type Options = {
    initialRating: number;
    kFactor: number;
};
/**
 * Elo rating system
 * @author Maxime Scharwath
 */
export default class Elo {
    #private;
    constructor(options?: Partial<Options>);
    /**
     * Get initial rating
     */
    getInitialRating(): number;
    /**
     * Get K-factor
     */
    getKFactor(): number;
    /**
     * Calculates the probability to win based on the rating of the opponent.
     * @param Ra Elo rating of hero A.
     * @param Rb Elo rating of hero B.
     */
    calculatePerformance(Ra: number, Rb: number): {
        Ea: number;
        Eb: number;
    };
    /**
     * Calculates the expected score of a hero based on the rating of the other hero.
     * @param Ra Elo rating of hero A.
     * @param Rb Elo rating of hero B.
     * @param S Expected score of hero A. (0 <= S <= 1)
     */
    calculateRating(Ra: number, Rb: number, S?: number): {
        Rb: number;
        Ra: number;
    };
}
export {};
